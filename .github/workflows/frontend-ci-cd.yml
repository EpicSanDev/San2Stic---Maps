# Fichier de workflow GitHub Actions pour le CI/CD du Frontend

name: Frontend CI/CD

on:
  push:
    branches:
      - main # ou master, selon votre branche principale
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci-cd.yml' # Déclenche aussi si ce fichier est modifié

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Utilisation de la dernière version majeure

      - name: Setup Node.js
        uses: actions/setup-node@v4 # Utilisation de la dernière version majeure
        with:
          node-version: '20.x' # Version LTS de Node.js

      - name: Install dependencies
        run: npm ci --prefix frontend
        # 'npm ci' est généralement plus rapide et plus fiable pour les builds CI/CD
        # '--prefix frontend' exécute la commande dans le répertoire frontend

      - name: Build React application
        run: npm run build --prefix frontend
        # Cette commande génère les fichiers statiques pour la production

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0 # Action pour déployer sur Netlify
        with:
          publish-dir: './frontend/build' # Répertoire contenant les fichiers buildés
          production-branch: main # Branche pour les déploiements de production
          # production-deploy: true # Assure que c'est un déploiement de production (souvent géré par production-branch)
          # Les secrets doivent être configurés dans les paramètres du repository GitHub
          # NETLIFY_AUTH_TOKEN: Token d'accès personnel Netlify
          # NETLIFY_SITE_ID: ID API de votre site sur Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5 # Timeout pour l'étape de déploiement