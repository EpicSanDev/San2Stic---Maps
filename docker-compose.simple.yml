services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=san2stic
      - POSTGRES_PASSWORD=secure_password_change_this
      - POSTGRES_DB=san2stic
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U san2stic"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5432:5432"

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../infra/Dockerfile.backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://san2stic:secure_password_change_this@db:5432/san2stic
      - JWT_SECRET=your_jwt_secret_change_this_to_something_secure
      - PORT=4000
    volumes:
      - shared_data:/shared
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "4000:4000"

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "3000:80"

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"

volumes:
  postgres_data:
    driver: local
  shared_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge