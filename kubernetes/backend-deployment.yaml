apiVersion: apps/v1
kind: Deployment
metadata:
  name: san2stic-backend
  labels:
    app: san2stic
    component: backend
spec:
  replicas: 2 # Commencez avec 2 replicas pour la haute disponibilité
  selector:
    matchLabels:
      app: san2stic
      component: backend
  template:
    metadata:
      labels:
        app: san2stic
        component: backend
    spec:
      containers:
        - name: backend
          image: gcr.io/VOTRE_PROJECT_ID/san2stic-backend:v1 # REMPLACEZ par votre image
          ports:
            - containerPort: 4000
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT # Assurez-vous que votre application utilise cette variable pour le port
              value: "4000"

            # Charger toutes les variables du ConfigMap backend-config
            - envFrom:
              - configMapRef:
                  name: backend-config

            # Charger JWT_SECRET depuis le Secret backend-secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: JWT_SECRET

            # Charger les identifiants de base de données depuis postgresql-secret (sera créé plus tard)
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret # Ce Secret sera créé avec la configuration de PostgreSQL
                  key: postgresql-user # La clé attendue dans le Secret postgresql-secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret # Ce Secret sera créé avec la configuration de PostgreSQL
                  key: postgresql-password # La clé attendue dans le Secret postgresql-secret

            # Clé de service GCP pour GCS (sera chargée depuis un Secret et montée en volume)
            - name: GCP_KEYFILE_PATH
              value: /etc/gcp/gcp-keyfile.json # Chemin dans le conteneur où le fichier clé sera disponible
          volumeMounts:
            - name: gcp-keyfile-volume
              mountPath: /etc/gcp # Le répertoire où le fichier clé sera monté
              readOnly: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m" # 0.1 vCPU
            limits:
              memory: "512Mi"
              cpu: "500m" # 0.5 vCPU
      volumes:
        - name: gcp-keyfile-volume
          secret:
            secretName: gcp-keyfile-secret # Nom du Secret contenant la clé GCP